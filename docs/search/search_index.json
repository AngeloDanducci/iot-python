{
    "docs": [
        {
            "location": "/", 
            "text": "Python for IBM Watson IoT Platform\n\n\nPython module for interacting with the \nIBM Watson IoT Platform\n.\n\n\n\n\nPython 3.6\n\n\nPython 2.7\n\n\n\n\nNote: Support for MQTT with TLS requires at least Python v2.7.9 or v3.4, and openssl v1.0.1\n\n\nDependencies\n\n\n\n\npaho-mqtt\n\n\niso8601\n\n\npytz\n\n\nrequests\n\n\nrequests_toolbelt\n\n\ndicttoxml\n\n\nxmltodict\n\n\n\n\nInstallation\n\n\nInstall the latest version of the library with pip\n\n\n# pip install ibmiotf\n\n\n\n\nUninstall\n\n\nUninstalling the module is simple.\n\n\n# pip uninstall ibmiotf\n\n\n\n\nDocumentation\n\n\nDocumentation for the library is now located inside Bluemix:\n\n\n\n\nApplication Developers\n\n\nDevice Developers\n\n\n\n\nSupported Features\n\n\n\n\nDevice Connectivity\n: Connect your device(s) to Watson IoT Platform with ease using this library\n\n\nGateway Connectivity\n: Connect your gateway(s) to Watson IoT Platform with ease using this library\n\n\nApplication connectivity\n: Connect your application(s) to Watson IoT Platform with ease using this library\n\n\nWatson IoT API\n: Support for the interacting with the Watson IoT Platform through REST APIs\n\n\nSSL/TLS\n: By default, this library connects your devices, gateways and applications securely to Watson IoT Platform registered service. Ports \n8883\n (default) and \n443\n support secure connections using TLS with the MQTT and HTTP protocol. Support for MQTT with TLS requires at least Python v2.7.9 or v3.4, and openssl v1.0.1\n\n\nDevice Management for Device\n: Connects your device(s) as managed device(s) to Watson IoT Platform.\n\n\nDevice Management for Gateway\n: Connects your gateway(s) as managed device(s) to Watson IoT Platform.\n\n\nDevice Management Extensions\n: Provides support for custom device management actions.\n\n\nScalable Applications\n: Supports load balancing of MQTT subscriptions over multiple application instances.\n\n\nAuto Reconnect\n: All clients support automatic reconnect to the Platform in the event of a network interruption.\n\n\nEvent/Command publish\n: Offers a pure HTTP client supporting messaging over HTTP in addition to the full features client that utilizes HTTP and MQTT technologies as appropriate \n\n\nData Format Support\n: JSON, XML, \n user-defined.\n\n\n\n\nUnsupported Features\n\n\n\n\nClient side Certificate based authentication\n: \nClient side Certificate based authentication\nn\n\n\nWebsockets\n: Support device/gateway/application connectivity to Watson IoT Platform using WebSocket", 
            "title": "Home"
        }, 
        {
            "location": "/#python-for-ibm-watson-iot-platform", 
            "text": "Python module for interacting with the  IBM Watson IoT Platform .   Python 3.6  Python 2.7   Note: Support for MQTT with TLS requires at least Python v2.7.9 or v3.4, and openssl v1.0.1", 
            "title": "Python for IBM Watson IoT Platform"
        }, 
        {
            "location": "/#dependencies", 
            "text": "paho-mqtt  iso8601  pytz  requests  requests_toolbelt  dicttoxml  xmltodict", 
            "title": "Dependencies"
        }, 
        {
            "location": "/#installation", 
            "text": "Install the latest version of the library with pip  # pip install ibmiotf", 
            "title": "Installation"
        }, 
        {
            "location": "/#uninstall", 
            "text": "Uninstalling the module is simple.  # pip uninstall ibmiotf", 
            "title": "Uninstall"
        }, 
        {
            "location": "/#documentation", 
            "text": "Documentation for the library is now located inside Bluemix:   Application Developers  Device Developers", 
            "title": "Documentation"
        }, 
        {
            "location": "/#supported-features", 
            "text": "Device Connectivity : Connect your device(s) to Watson IoT Platform with ease using this library  Gateway Connectivity : Connect your gateway(s) to Watson IoT Platform with ease using this library  Application connectivity : Connect your application(s) to Watson IoT Platform with ease using this library  Watson IoT API : Support for the interacting with the Watson IoT Platform through REST APIs  SSL/TLS : By default, this library connects your devices, gateways and applications securely to Watson IoT Platform registered service. Ports  8883  (default) and  443  support secure connections using TLS with the MQTT and HTTP protocol. Support for MQTT with TLS requires at least Python v2.7.9 or v3.4, and openssl v1.0.1  Device Management for Device : Connects your device(s) as managed device(s) to Watson IoT Platform.  Device Management for Gateway : Connects your gateway(s) as managed device(s) to Watson IoT Platform.  Device Management Extensions : Provides support for custom device management actions.  Scalable Applications : Supports load balancing of MQTT subscriptions over multiple application instances.  Auto Reconnect : All clients support automatic reconnect to the Platform in the event of a network interruption.  Event/Command publish : Offers a pure HTTP client supporting messaging over HTTP in addition to the full features client that utilizes HTTP and MQTT technologies as appropriate   Data Format Support : JSON, XML,   user-defined.", 
            "title": "Supported Features"
        }, 
        {
            "location": "/#unsupported-features", 
            "text": "Client side Certificate based authentication :  Client side Certificate based authentication n  Websockets : Support device/gateway/application connectivity to Watson IoT Platform using WebSocket", 
            "title": "Unsupported Features"
        }, 
        {
            "location": "/docs/abstractClient/", 
            "text": "AbstractClient\n\n\n\nAbstractClient(self, domain, organization, clientId, username, password, port=8883, logHandlers=None, cleanSession='true', transport='tcp')\n\n\n\n\nRepresents an abstract message recieved over Mqtt.  All implementations of a Codec must return an object of this type.\n\n\nParameters\n\n\n\n\ndomain (string)\n: Domain denoting the instance of IBM Watson IoT Platform to connect to\n\n\norganization (string)\n: IBM Watson IoT Platform organization ID to connect to\n\n\nclientId (string)\n: MQTT clientId for the underlying Paho client\n\n\nusername (string)\n: MQTT username for the underlying Paho client\n\n\npassword (string)\n: MQTT password for the underlying Paho client\n\n\nport (int)\n: MQTT port for the underlying Paho client to connect using.  Defaults to \n8883\n\n\nlogHandlers (list\n)\n: Log handlers to configure.  Defaults to \nNone\n,\n    which will result in a default log handler being created.\n\n\ncleanSession (string)\n: Defaults to \ntrue\n.  Although this is a true|false parameter,\n    it is being handled as a string for some reason\n\n\ntransport (string)\n: Defaults to \ntcp\n\n\n\n\nAttributes\n\n\n\n\nclient (paho.mqtt.client.Client)\n: Built-in Paho MQTT client handling connectivity for the client.\n\n\nlogger (logging.logger)\n: Client logger.\n\n\n\n\nstats\n\n\n\nAbstractClient.stats(self)\n\n\n\n\nI think we killed the use of this and this is dead code\n\n\nTODO: clean all this up .. should we really be tracking these stats within the client itself in the first place?\n\n\non_publish\n\n\n\nAbstractClient.on_publish(self, mqttc, obj, mid)\n\n\n\n\nCalled when a message from the client has been successfully sent to IBM Watson IoT Platform.\n\n\nParameters\n\n\n\n\nmqttc (paho.mqtt.client.Client)\n: The client instance for this callback\n\n\nobj (object)\n: The private user data as set in Client() or user_data_set()\n\n\nmid (int)\n: Gives the message id of the successfully published message.\n\n\n\n\ngetKeepAliveInterval\n\n\n\nAbstractClient.getKeepAliveInterval(self)\n\n\n\n\nGet the current setting for keepalive.  Note: This is not necessarily the\nvalue used by the current active connection, as any changes to this value\nare only applied when a new connection to the Platfrom is established\n\n\nReturns\n\n\nint\n: Number of seconds the keepalive interval is set to\n\n\nlogAndRaiseException\n\n\n\nAbstractClient.logAndRaiseException(self, e)\n\n\n\n\nLogs an exception at log level \ncritical\n before raising it.\n\n\nArguments\n\n\n\n\ne (Exception)\n: The exception to log/raise\n\n\n\n\ndisconnect\n\n\n\nAbstractClient.disconnect(self)\n\n\n\n\nDisconnect the client from IBM Watson IoT Platform\n\n\nsetMessageEncoderModule\n\n\n\nAbstractClient.setMessageEncoderModule(self, messageFormat, module)\n\n\n\n\nSet a Python module as the encoder/decoder for a specified message format.\n\n\nArguments\n\n\n\n\nmessageFormat (string)\n: The message format to retreive the encoder for\n\n\nmodule (module)\n: The Python module to set as the encoder/decoder for \nmessageFormat\n\n\n\n\non_disconnect\n\n\n\nAbstractClient.on_disconnect(self, mqttc, obj, rc)\n\n\n\n\nCalled when the client disconnects from IBM Watson IoT Platform.\n\n\nParameters\n\n\n\n\nmqttc (paho.mqtt.client.Client)\n: The client instance for this callback\n\n\nobj (object)\n: The private user data as set in Client() or user_data_set()\n\n\n\n\nrc (int)\n: indicates the disconnection state.  If \nMQTT_ERR_SUCCESS\n (0), the callback was\n    called in response to a \ndisconnect()\n call. If any other value the disconnection was\n    unexpected, such as might be caused by a network error.\n\n\n\n\n\n\nSee https\n://github.com/eclipse/paho.mqtt.python#on_disconnect for more information\n\n\n\n\n\n\nconnect\n\n\n\nAbstractClient.connect(self)\n\n\n\n\nConnect the client to IBM Watson IoT Platform using the underlying Paho MQTT client\n\n\nRaises\n\n\n\n\nConnectionException\n: If there is a problem establishing the connection.\n\n\n\n\nsetKeepAliveInterval\n\n\n\nAbstractClient.setKeepAliveInterval(self, newKeepAliveInterval)\n\n\n\n\nReconfigure the keepalive value for any subsequent MQTT connection made\nby the client.  This does not affect the keep alive setting of any\nexisting connection.  Traffic generated by keep alive is minimal, but\nalso billable as part of your data transfer to/from the Platform.\n\n\nProperties\n\n\nnewKeepAliveInterval (int): Number of seconds for the new keepalive interval\n\n\ngetMessageEncoderModule\n\n\n\nAbstractClient.getMessageEncoderModule(self, messageFormat)\n\n\n\n\nGet the Python module that is currently defined as the encoder/decoder for a specified message format.\n\n\nArguments\n\n\n\n\nmessageFormat (string)\n: The message format to retrieve the encoder for\n\n\n\n\nReturns\n\n\nBoolean\n: The python module, or \nNone\n if there is no codec defined for the \nmessageFormat\n\n\non_log\n\n\n\nAbstractClient.on_log(self, mqttc, obj, level, string)\n\n\n\n\nCalled when the client has log information.\n\n\nParameters\n\n\n\n\nmqttc (paho.mqtt.client.Client)\n: The client instance for this callback\n\n\nobj (object)\n: The private user data as set in Client() or user_data_set()\n\n\nlevel (int)\n: The severity of the message, will be one of \nMQTT_LOG_INFO\n,\n    \nMQTT_LOG_NOTICE\n, \nMQTT_LOG_WARNING\n, \nMQTT_LOG_ERR\n, and \nMQTT_LOG_DEBUG\n.\n\n\n\n\nstring (string)\n: The log message itself\n\n\n\n\n\n\nSee https\n://github.com/eclipse/paho.mqtt.python#on_log for more information", 
            "title": "abstractClient"
        }, 
        {
            "location": "/docs/httpAbstractClient/", 
            "text": "HttpAbstractClient\n\n\n\nHttpAbstractClient(self, clientId, logHandlers=None)\n\n\n\n\nBase client class restricted to HTTP only.  Unless for some technical reason\nyou are unable to use the full MQTT-enable client there really is no need to\nuse this alternative feature-limited client.\n\n\ngetContentType\n\n\n\nHttpAbstractClient.getContentType(self, dataFormat)\n\n\n\n\nMethod to detect content type using given data format", 
            "title": "httpAbstractClient"
        }, 
        {
            "location": "/docs/message/", 
            "text": "Message\n\n\n\nMessage(self, data, timestamp=None)\n\n\n\n\nRepresents an abstract message recieved over Mqtt.  All implementations of a Codec must return an object of this type.\n\n\nParameters\n\n\n\n\ndata (dict)\n: The message payload\n\n\ntimestamp (datetime)\n: Timestamp intended to denote the time the message was sent,\n    or \nNone\n if this information is not available.", 
            "title": "message"
        }, 
        {
            "location": "/docs/exceptions/connect/", 
            "text": "ConnectionException\n\n\n\nConnectionException(self, reason)\n\n\n\n\nGeneric Connection exception \"Something went wrong\"", 
            "title": "ConnectionException"
        }, 
        {
            "location": "/docs/exceptions/config/", 
            "text": "ConfigurationException\n\n\n\nConfigurationException(self, reason)\n\n\n\n\nSpecific Connection exception where the configuration is invalid", 
            "title": "ConfigurationException"
        }, 
        {
            "location": "/docs/exceptions/auth/", 
            "text": "UnsupportedAuthenticationMethod\n\n\n\nUnsupportedAuthenticationMethod(self, method)\n\n\n\n\nSpecific Connection exception where the authentication method specified is not supported", 
            "title": "UnsupportedAuthenticationMethod"
        }, 
        {
            "location": "/docs/exceptions/invalidEvent/", 
            "text": "InvalidEventException\n\n\n\nInvalidEventException(self, reason)\n\n\n\n\nSpecific exception where and Event object can not be constructed", 
            "title": "InvalidEventException"
        }, 
        {
            "location": "/docs/exceptions/missingDecoder/", 
            "text": "MissingMessageDecoderException\n\n\n\nMissingMessageDecoderException(self, format)\n\n\n\n\nSpecific exception where there is no message decoder defined for the message format being processed", 
            "title": "MissingMessageDecoderException"
        }, 
        {
            "location": "/docs/exceptions/missingEncoder/", 
            "text": "MissingMessageEncoderException\n\n\n\nMissingMessageEncoderException(self, format)\n\n\n\n\nSpecific exception where there is no message encoder defined for the message format being processed", 
            "title": "MissingMessageEncoderException"
        }, 
        {
            "location": "/docs/exceptions/api/", 
            "text": "APIException\n\n\n\nAPIException(self, httpCode, message, response)\n\n\n\n\nException raised when any API call fails\n1 The exact HTTP Status Code\n2 The error thrown\n3 The JSON message returned", 
            "title": "APIException"
        }, 
        {
            "location": "/docs/device/", 
            "text": "ibmiotf.device\n\n\n\nClient\n\n\n\nClient(self, options, logHandlers=None)\n\n\n\n\nCOMMAND_TOPIC\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\non_connect\n\n\nClient.on_connect(self, client, userdata, flags, rc)\n\n\n\n\nThis is called after the client has received a CONNACK message from the broker in response to calling connect().\nThe parameter rc is an integer giving the return code:\n\n\n0: Success\n1: Refused - unacceptable protocol version\n2: Refused - identifier rejected\n3: Refused - server unavailable\n4: Refused - bad user name or password\n5: Refused - not authorised\n\n\npublishEvent\n\n\n\nClient.publishEvent(self, event, msgFormat, data, qos=0, on_publish=None)\n\n\n\n\nPublish an event in IoTF.\n\n\nParameters:\n    event - the name of this event\n    msgFormat - the format of the data for this event\n    data - the data for this event\n\n\nOptional paramters:\n    qos - the equivalent MQTT semantics of quality of service using the same constants (0, 1 and 2)\n    on_publish - a function that will be called when receipt of the publication is confirmed.  This\n                 has different implications depending on the qos:\n                 qos 0 - the client has asynchronously begun to send the event\n                 qos 1 and 2 - the client has confirmation of delivery from IoTF\n\n\nManagedClient\n\n\n\nManagedClient(self, options, logHandlers=None, deviceInfo=None)\n\n\n\n\nDM_FIRMWARE_DOWNLOAD_TOPIC\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_VERIFICATION_FAILED\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nRESPONSECODE_INTERNAL_ERROR\n\n\n\n\n\n\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nDM_CANCEL_OBSERVE_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATE_LOCATION_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nRESPONSECODE_FUNCTION_NOT_SUPPORTED\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nUPDATESTATE_OUT_OF_MEMORY\n\n\n\n\n\n\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nRESPONSE_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nCLEAR_ERROR_CODES_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_INVALID_URI\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nUPDATESTATE_UNSUPPORTED_IMAGE\n\n\n\n\n\n\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nRESPONSECODE_ACCEPTED\n\n\n\n\n\n\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nADD_ERROR_CODE_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nDME_ACTION_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nDM_UPDATE_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nDM_FIRMWARE_UPDATE_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nDM_FACTORY_REESET\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_DOWNLOADED\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nMANAGE_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nCLEAR_LOG_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nRESPONSECODE_BAD_REQUEST\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nUPDATESTATE_IDLE\n\n\n\n\n\n\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nUNMANAGE_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nDM_OBSERVE_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_DOWNLOADING\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nDM_REBOOT_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nADD_LOG_TOPIC\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_CONNECTION_LOST\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nDM_RESPONSE_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_IN_PROGRESS\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nNOTIFY_TOPIC\n\n\n\n\n\n\n\n\nstr(object='') -\n string\n\n\nReturn a nice string representation of the object.\nIf the argument is a string, the return value is the same object.\n\nUPDATESTATE_SUCCESS\n\n\nint(x=0) -\n int or long\nint(x, base=10) -\n int or long\n\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is floating point, the conversion truncates towards zero.\nIf x is outside the integer range, the function returns a long instead.\n\n\nIf x is not a number or if base is given, then x must be a string or\nUnicode object representing an integer literal in the given base.  The\nliteral can be preceded by '+' or '-' and be surrounded by whitespace.\nThe base defaults to 10.  Valid bases are 0 and 2-36.  Base 0 means to\ninterpret the base from the string as an integer literal.\n\n\n\n\n\n\n\n\nint('0b100', base=0)\n4\n\nHttpClient\n\n\n\n\n\n\n\n\nHttpClient(self, options, logHandlers=None)\n\n\n\n\nA basic device client with limited capabilies that forgoes an active MQTT connection to the service.\n\n\npublishEvent\n\n\n\nHttpClient.publishEvent(self, event, msgFormat, data)\n\n\n\n\nPublish an event over HTTP(s) as given supported format\nThrows a ConnectionException with the message \"Server not found\" if the client is unable to reach the server\nOtherwise it returns the HTTP status code, (200 - 207 for success)\n\n\nCommand\n\n\n\nCommand(self, pahoMessage, messageEncoderModules)\n\n\n\n\nDeviceInfo\n\n\n\nDeviceInfo(self)\n\n\n\n\nDeviceFirmware\n\n\n\nDeviceFirmware(self, version=None, name=None, url=None, verifier=None, state=None, updateStatus=None, updatedDateTime=None)", 
            "title": "Client"
        }
    ]
}